{'union_specifier', '&=', 'enum_specifier', '{', 'field_declaration_list', 'while_statement', '&&', '-=', 'type_identifier', 'gnu_asm_input_operand', 'inline', 'register', 'true', 'gnu_asm_output_operand', 'offsetof_expression', '->', 'call_expression', '||', 'comment', ':', 'subscript_expression', '#ifdef', '.', '#include', 'sizeof_expression', '++', '>>', 'storage_class_specifier', '__attribute', '<<=', 'return', 'variadic_parameter', 'volatile', 'switch_statement', '#if', '>>=', 'union', '#endif', '!=', 'do_statement', 'preproc_defined', 'number_literal', 'preproc_arg', 'abstract_function_declarator', 'field_identifier', '<=', 'preproc_params', 'sized_type_specifier', '[', 'enumerator_list', ',', 'pointer_declarator', 'continue_statement', ')', '\n', 'if', 'parenthesized_expression', 'update_expression', 'break_statement', '::', 'binary_expression', 'init_declarator', 'type_descriptor', 'field_expression', '!', 'preproc_ifdef', '...', '^', 'preproc_elif', 'sizeof', 'preproc_function_def', 'primitive_type', 'char_literal', 'concatenated_string', 'field_designator', 'abstract_parenthesized_declarator', '>=', 'case_statement', 'cast_expression', 'comma_expression', 'return_statement', '__asm__', 'abstract_pointer_declarator', 'identifier', 'string_literal', '#define', '<<', '~', 'attribute_specifier', 'for', 'case', '/=', 'translation_unit', 'struct', 'preproc_if', 'character', 'asm', 'for_statement', 'break', 'statement_identifier', 'field_declaration', '}', '=', 'do', 'abstract_array_declarator', 'short', 'while', 'ERROR', '^=', 'gnu_asm_clobber_list', 'array_declarator', ';', 'unary_expression', 'defined', 'macro_type_specifier', 'pointer_expression', '%=', '|=', 'else', 'labeled_statement', 'preproc_else', 'struct_specifier', 'static', 'continue', 'type_qualifier', '*=', 'gnu_asm_output_operand_list', 'declaration', 'conditional_expression', 'subscript_designator', 'signed', 'if_statement', 'switch', 'compound_literal_expression', 'gnu_asm_qualifier', 'enumerator', '?', 'preproc_call', 'parenthesized_declarator', 'function_definition', '>', 'preproc_directive', 'unsigned', 'gnu_asm_input_operand_list', 'escape_sequence', 'null', '|', 'long', 'else_clause', 'initializer_list', ']', '--', 'expression_statement', 'NULL', '+', '#else', 'gnu_asm_expression', '*', '==', 'const', 'false', '<', "'", 'initializer_pair', '#ifndef', 'offsetof', 'enum', '%', 'string_content', '#elif', '(', 'parameter_declaration', 'assignment_expression', '__attribute__', '/', '+=', 'system_lib_string', '-', '"', '&', 'default', 'goto_statement', 'function_declarator', 'parameter_list', 'preproc_def', 'preproc_include', 'compound_statement', 'argument_list', 'goto'}
function_definition
preproc_function_def
abstract_function_declarator
function_declarator
